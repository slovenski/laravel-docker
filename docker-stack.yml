version: "3.7"

services: 
  app:
    image: 127.0.0.1:5000/app
    volumes: 
      - "app-storage:/var/www"
    networks:
      - laravel-net
    deploy:
      mode: 'replicated'
      replicas: 1
      placement:
        constraints: [node.role == worker]
      update_config:
        parallelism: 2
        delay: 5s
        order: stop-first
      restart_policy:
        condition: on-failure

  nginx:
    image: nginx:alpine
    configs:
      - source: nginx-config
        target: /etc/nginx/conf.d/default.conf
    volumes: 
      - "app-storage:/var/www"
    networks:
      - laravel-net
    ports:
      - "80:80"
      - "443:443"
    deploy:
      mode: 'replicated'
      replicas: 2
      placement:
        constraints: [node.role == worker]
      update_config:
        parallelism: 2
        delay: 5s
        order: stop-first
      restart_policy:
        condition: on-failure

  dbs:
    image: mysql:5.7.22
    configs:
      - source: mysql-config
        target: /etc/mysql/my.cnf
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_USER: homestead
      MYSQL_DATABASE: homestead
      MYSQL_PASSWORD: secret
    volumes: 
      - "dbs-storage:/var/lib/mysql"
    networks:
      - laravel-net
    deploy:
      mode: 'replicated'
      replicas: 1
      placement:
        constraints: [node.role == worker]
      update_config:
        parallelism: 2
        delay: 5s
        order: stop-first
      restart_policy:
        condition: on-failure

networks:
  laravel-dev:
    driver: overlay

volumes:
  app-storage:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "/mnt/swarm/app-storage"
  dbs-storage:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "/mnt/swarm/dbs-storage"

configs:
  nginx-config:
    name: nginx-config
    file: ./configs/nginx-default.conf
  mysql-config:
    name: mysql-config
    file: ./configs/my.cnf